version: '3.8'

services:

  postgres:
    image: postgres:15.5-alpine3.19
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '512M'

  auth:
    image: quay.io/keycloak/keycloak:26.0.6
    ports:
      - "9990:8080"
      - "9991:8443"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_ADMIN: ${KC_HOSTNAME_ADMIN}
      KC_PROXY: edge
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_DB: postgres
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - start
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./auth/import:/opt/keycloak/data/import
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1024M'

networks:
  keycloak-network:
    driver: bridge

volumes:
  postgres_data:
  keycloak_data:
